name: Release to Maven Central

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Extract version from tag
      id: extract_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Update version in build.gradle
      run: |
        sed -i "s/version = '[^']*'/version = '${{ steps.extract_version.outputs.VERSION }}'/" build.gradle
        
    - name: Create GPG key file
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode > private.key
        
    - name: Build and publish
      env:
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      run: |
        chmod +x gradlew
        ./gradlew clean build publishToMavenLocal
        
    - name: Create release bundle
      run: |
        VERSION=${{ steps.extract_version.outputs.VERSION }}
        MAVEN_DIR=~/.m2/repository/io/github/simplesqlgen/simple-sql-generator/$VERSION
        
        # Check if directory exists
        if [ ! -d "$MAVEN_DIR" ]; then
          echo "‚ùå Maven directory not found: $MAVEN_DIR"
          find ~/.m2 -name "*simple-sql-generator*" -type d | head -10
          exit 1
        fi
        
        cd "$MAVEN_DIR"
        echo "üìÅ Working in: $(pwd)"
        ls -la
        
        # Generate checksums for existing files
        for file in *.jar *.pom *.module; do
          if [ -f "$file" ]; then
            echo "üîê Generating checksums for $file"
            md5sum "$file" | cut -d' ' -f1 > "$file.md5"
            sha1sum "$file" | cut -d' ' -f1 > "$file.sha1"
          fi
        done
        
        # Create directory structure
        mkdir -p io/github/simplesqlgen/simple-sql-generator/$VERSION
        
        # Copy all files (including signatures)
        for ext in jar pom asc module md5 sha1; do
          cp *.$ext io/github/simplesqlgen/simple-sql-generator/$VERSION/ 2>/dev/null || echo "‚ö†Ô∏è No .$ext files found"
        done
        
        # Create ZIP bundle
        zip -r simple-sql-generator-$VERSION-bundle.zip io/
        echo "‚úÖ Created bundle: simple-sql-generator-$VERSION-bundle.zip"
        ls -la *.zip
        
    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ~/.m2/repository/io/github/simplesqlgen/simple-sql-generator/${{ steps.extract_version.outputs.VERSION }}/simple-sql-generator-${{ steps.extract_version.outputs.VERSION }}-bundle.zip
        body: |
          ## üöÄ Release ${{ steps.extract_version.outputs.VERSION }}
          
          ### Maven Dependency
          ```gradle
          dependencies {
              implementation 'io.github.simplesqlgen:simple-sql-generator:${{ steps.extract_version.outputs.VERSION }}'
          }
          ```
          
          ### Manual Upload to Maven Central
          1. Download the ZIP bundle from this release
          2. Go to https://central.sonatype.com
          3. Upload the ZIP file
          4. Click Publish
          
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Clean up
      run: rm -f private.key